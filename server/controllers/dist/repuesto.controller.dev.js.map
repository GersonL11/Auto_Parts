{"version":3,"sources":["repuesto.controller.js"],"names":["Repuesto","require","exports","crearRepuesto","req","res","repuesto","body","save","status","json","error","message","obtenerRepuestos","find","repuestos","obtenerRepuestoPorId","findById","params","id","actualizarRepuesto","findByIdAndUpdate","eliminarRepuesto","findByIdAndDelete","mensaje"],"mappings":"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","sourcesContent":["const Repuesto = require('../models/Repuesto');\r\n\r\n// Crear repuesto\r\nexports.crearRepuesto = async (req, res) => {\r\n  try {\r\n    const repuesto = new Repuesto(req.body);\r\n    await repuesto.save();\r\n    res.status(201).json(repuesto);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Obtener todos los repuestos\r\nexports.obtenerRepuestos = async (req, res) => {\r\n  const repuestos = await Repuesto.find();\r\n  res.json(repuestos);\r\n};\r\n\r\n// Obtener un repuesto por ID\r\nexports.obtenerRepuestoPorId = async (req, res) => {\r\n  try {\r\n    const repuesto = await Repuesto.findById(req.params.id);\r\n    if (!repuesto) return res.status(404).json({ error: 'Repuesto no encontrado' });\r\n    res.json(repuesto);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Actualizar repuesto\r\nexports.actualizarRepuesto = async (req, res) => {\r\n  try {\r\n    const repuesto = await Repuesto.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n    if (!repuesto) return res.status(404).json({ error: 'Repuesto no encontrado' });\r\n    res.json(repuesto);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Eliminar repuesto\r\nexports.eliminarRepuesto = async (req, res) => {\r\n  try {\r\n    const repuesto = await Repuesto.findByIdAndDelete(req.params.id);\r\n    if (!repuesto) return res.status(404).json({ error: 'Repuesto no encontrado' });\r\n    res.json({ mensaje: 'Repuesto eliminado' });\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};"],"file":"repuesto.controller.dev.js"}