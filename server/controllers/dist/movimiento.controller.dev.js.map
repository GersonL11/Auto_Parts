{"version":3,"sources":["movimiento.controller.js"],"names":["Movimiento","require","exports","crearMovimiento","req","res","movimiento","body","save","status","json","error","message","obtenerMovimientos","find","populate","movimientos","obtenerMovimientoPorId","findById","params","id","actualizarMovimiento","findByIdAndUpdate","eliminarMovimiento","findByIdAndDelete","mensaje"],"mappings":"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","sourcesContent":["const Movimiento = require('../models/Movimiento');\r\n\r\n// Crear movimiento\r\nexports.crearMovimiento = async (req, res) => {\r\n  try {\r\n    const movimiento = new Movimiento(req.body);\r\n    await movimiento.save();\r\n    res.status(201).json(movimiento);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Obtener todos los movimientos\r\nexports.obtenerMovimientos = async (req, res) => {\r\n  const movimientos = await Movimiento.find().populate('repuesto');\r\n  res.json(movimientos);\r\n};\r\n\r\n// Obtener un movimiento por ID\r\nexports.obtenerMovimientoPorId = async (req, res) => {\r\n  try {\r\n    const movimiento = await Movimiento.findById(req.params.id).populate('repuesto');\r\n    if (!movimiento) return res.status(404).json({ error: 'Movimiento no encontrado' });\r\n    res.json(movimiento);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Actualizar movimiento\r\nexports.actualizarMovimiento = async (req, res) => {\r\n  try {\r\n    const movimiento = await Movimiento.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n    if (!movimiento) return res.status(404).json({ error: 'Movimiento no encontrado' });\r\n    res.json(movimiento);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Eliminar movimiento\r\nexports.eliminarMovimiento = async (req, res) => {\r\n  try {\r\n    const movimiento = await Movimiento.findByIdAndDelete(req.params.id);\r\n    if (!movimiento) return res.status(404).json({ error: 'Movimiento no encontrado' });\r\n    res.json({ mensaje: 'Movimiento eliminado' });\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};"],"file":"movimiento.controller.dev.js"}