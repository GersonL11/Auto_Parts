{"version":3,"sources":["venta.controller.js"],"names":["Venta","require","exports","crearVenta","req","res","venta","regeneratorRuntime","async","_context","prev","next","body","awrap","save","status","json","t0","error","message","stop","obtenerVentas","ventas","_context2","find","populate","sent","obtenerVentaPorId","_context3","findById","params","id","abrupt","actualizarVenta","_context4","findByIdAndUpdate","new","eliminarVenta","_context5","findByIdAndDelete","mensaje"],"mappings":"aAAA,IAAMA,MAAQC,QAAQ,mBAGtBC,QAAQC,WAAa,SAAOC,EAAKC,GAAZ,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAbP,EAAR,IAAqBH,MAAAI,EAAAQ,MAAAH,EAAAE,KAAA,EAAAJ,mBAAAM,MAAAP,EAAAQ,QAAA,KAAA,EAAAT,EAAAU,OAAA,KAAAC,KAAAV,GAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,MAAA,GAAAJ,EAAAU,OAAA,KAAAC,KAAA,CAAAE,MAAAT,EAAAQ,GAAAE,UAAA,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAAW,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAlB,QAAAmB,cAAA,SAAAjB,EAAAC,GAAA,IAAAiB,EAAA,OAAAf,mBAAAC,MAAA,SAAAe,GAAA,OAAA,OAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,EAAA,OAAAY,EAAAZ,KAAA,EAAAJ,mBAAAM,MAYEb,MAAMwB,OAAOC,SAAS,sCAZxB,KAAA,EAYbH,EAZaC,EAAAG,KAAArB,EAAAW,KAAAM,GAAA,KAAA,EAAA,IAAA,MAAA,OAAAC,EAAAH,WAiBrBlB,QAAQyB,kBAAoB,SAAOvB,EAAKC,GAAZ,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAAAJ,mBAAAM,MAjBPb,MAAA6B,SAAAzB,EAAA0B,OAAAC,IAAAN,SAAA,sCAiBO,KAAA,EAAA,GAjBPnB,EAiBOsB,EAAAF,KAAA,CAAAE,EAAAjB,KAAA,EAAA,MAAA,OAAAiB,EAAAI,OAAA,SAjBP3B,EAAAU,OAAA,KAAAC,KAAA,CAAAE,MAAA,yBAiBO,KAAA,EAXxBb,EAAAA,KAAGC,GAWqBsB,EAAAjB,KAAA,GAAA,MAAA,KAAA,EAAAiB,EAAAlB,KAAA,EAAAkB,EAAAX,GAAAW,EAAA,MAAA,GAXHvB,EAAAU,OAArB,KAAAC,KAAA,CAAAE,MAAAU,EAAAX,GAAAE,UAWwB,KAAA,GAAA,IAAA,MAAA,OAAAS,EAAAR,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAjBPlB,QAAA+B,gBAAA,SAAA7B,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,OAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAAAJ,mBAAAM,MAAAb,MAAAmC,kBAAA/B,EAAA0B,OAAAC,GAAA3B,EAAAQ,KAAA,CAAAwB,KAAA,KAAA,KAAA,EAAA,GAAA9B,EAAA4B,EAAAR,KAAA,CAAAQ,EAAAvB,KAAA,EAAA,MAAA,OAAAuB,EAAAF,OAAA,SAUrB3B,EAAAU,OAAA,KAAAC,KAAA,CAAAE,MAAA,yBAVqB,KAAA,EAgCjBb,EAAIW,KAAKV,GAhCQ4B,EAAAvB,KAAA,GAAA,MAAA,KAAA,EAAAuB,EAAAxB,KAAA,EAAAwB,EAAAjB,GAAAiB,EAAA,MAAA,GAWrBhC,EAAQmB,OAAAA,KAAAA,KAAgB,CAAAH,MAAAgB,EAAAjB,GAAAE,UAXH,KAAA,GAAA,IAAA,MAAA,OAAAe,EAAAd,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAWGlB,QAAAmC,cAAA,SAAAjC,EAAAC,GAAA,OAAAE,mBAAAC,MAAA,SAAA8B,GAAA,OAAA,OAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,KAAA,EAAA,OAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAAAJ,mBAAAM,MAAAb,MAAAuC,kBACKf,EAANM,OAAaL,KADZ,KAAA,EAAA,GAAAa,EAAAZ,KAAA,CAAAY,EAAA3B,KAAA,EAAA,MAAA,OAAA2B,EAAAN,OAAA,SA+BD3B,EAAIU,OAAO,KAAKC,KAAK,CAAEE,MAAO,yBA/B7B,KAAA,EAAAb,EAAAW,KAAA,CAAAwB,QAAA,oBAAAF,EAAA3B,KAAA,GAAA,MAAA,KAAA,EAAA2B,EAAA5B,KAAA,EAAA4B,EAAArB,GAAAqB,EAAA,MAAA,GAEtBjC,EAAAA,OAAIW,KAAKM,KAAT,CAAAJ,MAAAoB,EAAArB,GAAAE,UAFsB,KAAA,GAAA,IAAA,MAAA,OAAAmB,EAAAlB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"venta.controller.min.js","sourcesContent":["const Venta = require('../models/Venta');\r\n\r\n// Crear venta\r\nexports.crearVenta = async (req, res) => {\r\n  try {\r\n    const venta = new Venta(req.body);\r\n    await venta.save();\r\n    res.status(201).json(venta);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Obtener todas las ventas\r\nexports.obtenerVentas = async (req, res) => {\r\n  const ventas = await Venta.find().populate('cliente repuesto usuario_registra');\r\n  res.json(ventas);\r\n};\r\n\r\n// Obtener una venta por ID\r\nexports.obtenerVentaPorId = async (req, res) => {\r\n  try {\r\n    const venta = await Venta.findById(req.params.id).populate('cliente repuesto usuario_registra');\r\n    if (!venta) return res.status(404).json({ error: 'Venta no encontrada' });\r\n    res.json(venta);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Actualizar venta\r\nexports.actualizarVenta = async (req, res) => {\r\n  try {\r\n    const venta = await Venta.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n    if (!venta) return res.status(404).json({ error: 'Venta no encontrada' });\r\n    res.json(venta);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Eliminar venta\r\nexports.eliminarVenta = async (req, res) => {\r\n  try {\r\n    const venta = await Venta.findByIdAndDelete(req.params.id);\r\n    if (!venta) return res.status(404).json({ error: 'Venta no encontrada' });\r\n    res.json({ mensaje: 'Venta eliminada' });\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};"]}