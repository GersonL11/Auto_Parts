{"version":3,"sources":["usuario.controller.js"],"names":["Usuario","require","exports","crearUsuario","req","res","usuario","body","save","status","json","error","message","obtenerUsuarios","find","usuarios","obtenerUsuarioPorId","findById","params","id","actualizarUsuario","findByIdAndUpdate","eliminarUsuario","findByIdAndDelete","mensaje"],"mappings":"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","sourcesContent":["const Usuario = require('../models/Usuario');\r\n\r\n// Crear usuario\r\nexports.crearUsuario = async (req, res) => {\r\n  try {\r\n    const usuario = new Usuario(req.body);\r\n    await usuario.save();\r\n    res.status(201).json(usuario);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Obtener todos los usuarios\r\nexports.obtenerUsuarios = async (req, res) => {\r\n  const usuarios = await Usuario.find();\r\n  res.json(usuarios);\r\n};\r\n\r\n// Obtener un usuario por ID\r\nexports.obtenerUsuarioPorId = async (req, res) => {\r\n  try {\r\n    const usuario = await Usuario.findById(req.params.id);\r\n    if (!usuario) return res.status(404).json({ error: 'Usuario no encontrado' });\r\n    res.json(usuario);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Actualizar usuario\r\nexports.actualizarUsuario = async (req, res) => {\r\n  try {\r\n    const usuario = await Usuario.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n    if (!usuario) return res.status(404).json({ error: 'Usuario no encontrado' });\r\n    res.json(usuario);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Eliminar usuario\r\nexports.eliminarUsuario = async (req, res) => {\r\n  try {\r\n    const usuario = await Usuario.findByIdAndDelete(req.params.id);\r\n    if (!usuario) return res.status(404).json({ error: 'Usuario no encontrado' });\r\n    res.json({ mensaje: 'Usuario eliminado' });\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};"],"file":"usuario.controller.dev.js"}