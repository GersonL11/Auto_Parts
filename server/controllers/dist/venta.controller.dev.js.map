{"version":3,"sources":["venta.controller.js"],"names":["Venta","require","exports","crearVenta","req","res","venta","body","save","status","json","error","message","obtenerVentas","find","populate","ventas","obtenerVentaPorId","findById","params","id","actualizarVenta","findByIdAndUpdate","eliminarVenta","findByIdAndDelete","mensaje"],"mappings":"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","sourcesContent":["const Venta = require('../models/Venta');\r\n\r\n// Crear venta\r\nexports.crearVenta = async (req, res) => {\r\n  try {\r\n    const venta = new Venta(req.body);\r\n    await venta.save();\r\n    res.status(201).json(venta);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Obtener todas las ventas\r\nexports.obtenerVentas = async (req, res) => {\r\n  const ventas = await Venta.find().populate('cliente repuesto usuario_registra');\r\n  res.json(ventas);\r\n};\r\n\r\n// Obtener una venta por ID\r\nexports.obtenerVentaPorId = async (req, res) => {\r\n  try {\r\n    const venta = await Venta.findById(req.params.id).populate('cliente repuesto usuario_registra');\r\n    if (!venta) return res.status(404).json({ error: 'Venta no encontrada' });\r\n    res.json(venta);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Actualizar venta\r\nexports.actualizarVenta = async (req, res) => {\r\n  try {\r\n    const venta = await Venta.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n    if (!venta) return res.status(404).json({ error: 'Venta no encontrada' });\r\n    res.json(venta);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Eliminar venta\r\nexports.eliminarVenta = async (req, res) => {\r\n  try {\r\n    const venta = await Venta.findByIdAndDelete(req.params.id);\r\n    if (!venta) return res.status(404).json({ error: 'Venta no encontrada' });\r\n    res.json({ mensaje: 'Venta eliminada' });\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};"],"file":"venta.controller.dev.js"}