{"version":3,"sources":["repuesto.controller.js"],"names":["Repuesto","require","exports","crearRepuesto","req","res","repuesto","regeneratorRuntime","async","_context","prev","next","body","awrap","save","status","json","t0","error","message","stop","obtenerRepuestos","repuestos","_context2","find","sent","obtenerRepuestoPorId","_context3","findById","params","id","abrupt","actualizarRepuesto","_context4","findByIdAndUpdate","new","eliminarRepuesto","_context5","findByIdAndDelete","mensaje"],"mappings":"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","file":"repuesto.controller.min.js","sourcesContent":["const Repuesto = require('../models/Repuesto');\r\n\r\n// Crear repuesto\r\nexports.crearRepuesto = async (req, res) => {\r\n  try {\r\n    const repuesto = new Repuesto(req.body);\r\n    await repuesto.save();\r\n    res.status(201).json(repuesto);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Obtener todos los repuestos\r\nexports.obtenerRepuestos = async (req, res) => {\r\n  const repuestos = await Repuesto.find();\r\n  res.json(repuestos);\r\n};\r\n\r\n// Obtener un repuesto por ID\r\nexports.obtenerRepuestoPorId = async (req, res) => {\r\n  try {\r\n    const repuesto = await Repuesto.findById(req.params.id);\r\n    if (!repuesto) return res.status(404).json({ error: 'Repuesto no encontrado' });\r\n    res.json(repuesto);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Actualizar repuesto\r\nexports.actualizarRepuesto = async (req, res) => {\r\n  try {\r\n    const repuesto = await Repuesto.findByIdAndUpdate(req.params.id, req.body, { new: true });\r\n    if (!repuesto) return res.status(404).json({ error: 'Repuesto no encontrado' });\r\n    res.json(repuesto);\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};\r\n\r\n// Eliminar repuesto\r\nexports.eliminarRepuesto = async (req, res) => {\r\n  try {\r\n    const repuesto = await Repuesto.findByIdAndDelete(req.params.id);\r\n    if (!repuesto) return res.status(404).json({ error: 'Repuesto no encontrado' });\r\n    res.json({ mensaje: 'Repuesto eliminado' });\r\n  } catch (err) {\r\n    res.status(400).json({ error: err.message });\r\n  }\r\n};"]}